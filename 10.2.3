
using System;
using System.Linq;

enum MonthName
{
    January = 1,
    February = 2,
    March = 3,
    April = 4,
    May = 5,
    June = 6,
    July = 7,
    August = 8,
    September = 9,
    October = 10,
    November = 11,
    December = 12,

}

public class MainClass
{
    public static void Main()
    {
        var s1 = Console.ReadLine().Split('.').Select(int.Parse).ToArray();
        var sequence = new Date(s1[0], s1[1], s1[2]);
        Console.WriteLine("текущая дата");
       sequence.Print();
        Console.WriteLine("следующа дата");
        var newDate = sequence.Next();
        newDate.Print();
        Console.WriteLine("предидущая дата");
        var newDate2 = sequence.Previous();
        newDate2.Print();
        Console.WriteLine("5 дней вперед");
        sequence.PrintForward(5);
        Console.WriteLine("5 дней назад");
        sequence.PrintBackward(5);
    }

}

internal class Date
{
    private int Day;
    private int Month;
    private int Year;

    private void CheckDate(ref int v1, ref int v2, ref int v3)
    {
        if (v3 <= 0) { v1 = 1; v2 = 1; v3 = 1; }
        else if (v2 <= 0) { v2 = 11 - v2; v3 = v3 - 1; }
        else if (v2 > 12) { v2 = v2 - 12; v3 = v3 + 1; }
        switch (v2)
        {
            case 1 or 3 or 5 or 7 or 8 or 10 or 12:
                if (v1 > 31) { v1 = v1 - 31; v2++; }
                if (v2 > 12) { v2 = v2 - 12; v3++; }
                break;
            case 4 or 6 or 9 or 11:
                if (v1 > 30) { v1 = v1 - 30; v2++; }
                if (v2 > 12) { v2 = v2 - 12; v3++; }
                break;
            case 2:
                if ((v3 % 4 == 0) && (v3 % 100 != 0 || v3 % 400 == 0))
                {
                    if (v1 > 29) { v1 = v1 - 29; v2++; }
                    if (v2 > 12) { v2 = v2 - 12; v3++; }
                }
                else
                {
                    if (v1 > 28) { v1 = v1 - 28; v2++; }
                    if (v2 > 12) { v2 = v2 - 12; v3++; }
                }
                break;
        }
    }

    private void CheckDatePrevious(ref int v1, ref int v2, ref int v3)
    {
        
        switch (v2)
        {
            case 1 or 2 or 4 or 6 or 8 or 9 or 11:
                if (v1 <= 0) { v1 = 31 - v1; v2--; }
                if (v2 <= 0) { v2 = 12 - v2; v3--; }
                break;
            case 5 or 7 or 10 or 12:
                if (v1 <= 0) { v1 = 30 - v1; v2--; }
                if (v2 <= 0) { v2 = 12 - v2; v3--; }
                break;
            case 3:
                if ((v3 % 4 == 0) && (v3 % 100 != 0 || v3 % 400 == 0))
                {
                    if (v1 <= 0) { v1 = 29 - v1; v2--; }
                    if (v2 <= 0) { v2 = 12 - v2; v3--; }
                }
                else
                {
                    if (v1 <= 0) { v1 = 28 - v1; v2--; }
                    if (v2 <= 0) { v2 = 12 - v2; v3--; }
                }
                break;
        }
        if (v3 <= 0) { v1 = 1; v2 = 1; v3 = 1; }
        else if (v2 <= 0) { v2 = 11 - v2; v3 = v3 - 1; }
        else if (v2 > 12) { v2 = v2 - 12; v3 = v3 + 1; }
    }
    public Date(int v1, int v2, int v3)
    {
        do
            CheckDate(ref v1, ref v2, ref v3);
        while (v1 > 31 || v2 > 12);
        Day = v1;
        Month = v2;
        Year = v3;
        
    }
    public void Print()
    {
        Console.WriteLine("The " + Day + " of " + (MonthName)Month + " " + Year);
    }
    public Date Next()
    {
        var nextDay = new Date(++this.Day, this.Month, this.Year);
        CheckDate(ref nextDay.Day, ref nextDay.Month, ref nextDay.Year);
        return nextDay;
    }
    public Date Previous()
    {
        var previousDay = new Date(this.Day, this.Month, this.Year);
        previousDay.Day--;
        CheckDatePrevious(ref previousDay.Day, ref previousDay.Month, ref previousDay.Year);
        return previousDay;
    }
    public void PrintForward(int a)
    {
        var intermediateВate = new Date(this.Day, this.Month, this.Year);
        for (int i = 0; i < a; i++)
        {
            intermediateВate.Next();
            Console.WriteLine("The " + intermediateВate.Day + " of " + (MonthName)intermediateВate.Month + " " + intermediateВate.Year);
        }
    }
    public void PrintBackward(int a)
    {
        var intermediateВateBackward = new Date(this.Day, this.Month, this.Year);
        for (int i = 0; i < a; i++)
        {
            intermediateВateBackward.Previous();
            Console.WriteLine("The " + intermediateВateBackward.Day + " of " + (MonthName)intermediateВateBackward.Month + " " + intermediateВateBackward.Year);
        }
    }
}
