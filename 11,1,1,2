using System;
using System.Text.RegularExpressions;
using System.Collections.Generic;

public class MainClass
{
    public static void Main()
    {
        bool flag = true;
        string phrase;
        string[] words = { "" };
        var dictionary = new Dictionary<string, string[]>();
        while (flag)
        {
            phrase = Console.ReadLine();
            if(phrase == "end") { flag = false; break; } else
            words = phrase.Split(' ');
            if (CheckingForCorrectnessName(words[0]) || CheckingForCorrectnessPass(words[1]) || words.Count() > 3 || CheckingForCorrectnessMail(words[2])) continue;
            else if (!dictionary.ContainsKey(words[2]))
            {
                dictionary.Add(words[2], new string[2] { words[0], words[1] });
                Account account = new Account ( words[0], words[1], words[2] );
                NoobDb.Add(account);
            } 
            else continue;
        }
        NoobDb.PrintAll();
    }
    public static bool CheckingForCorrectnessName(string str)
    {
        if (string.IsNullOrEmpty(str) || str.Length < 4 || str.Contains("  ")) return true;
        else return false;
    }
    public static bool CheckingForCorrectnessPass(string str)
    {
        string pattern = @"^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{6,}$";
        Match isMatch = Regex.Match(str, pattern);
        return !isMatch.Success;
    }
    public static bool CheckingForCorrectnessMail(string str)
    {
        string pattern =@"^(?("")(""[^""]+?""@)|(([0-9a-z]((\.(?!\.))|[-!#\$%&'\*\+/=\?\^`\{\}\|~\w])*)(?<=[0-9a-z])@))" +
                 @"(?(\[)(\[(\d{1,3}\.){3}\d{1,3}\])|(([0-9a-z][-\w]*[0-9a-z]*\.)+[a-z0-9]{2,17}))$";
        Match isMatch = Regex.Match(str, pattern, RegexOptions.IgnoreCase);
        return !isMatch.Success;
    }
}

